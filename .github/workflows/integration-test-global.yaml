name: Global integration tests

on:
  pull_request:
    paths:
      - 'bind-operator/src/**'
      - 'bind-operator/tests/**'
      - 'bind-operator/requirements.txt'
      - 'bind-operator/charmcraft.yaml'
      - 'dns-resolver-operator/src/**'
      - 'dns-resolver-operator/tests/**'
      - 'dns-resolver-operator/requirements.txt'
      - 'dns-resolver-operator/charmcraft.yaml'
      - 'dns-integrator-operator/src/**'
      - 'dns-integrator-operator/tests/**'
      - 'dns-integrator-operator/requirements.txt'
      - 'dns-integrator-operator/charmcraft.yaml'
      - '.github/workflows/integration-test-global.yaml'
  push:
    branches:
      - main

jobs:
  integration-test:
    name: Integration tests
    timeout-minutes: 60
    runs-on: ubuntu-24.04
    steps:
      - name: Disable snap autorefresh
        run: sudo snap refresh --hold=2h
      - uses: actions/checkout@v5.0.0
      - name: Install tox
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq tox
      - name: Set up environment
        run: |
          sudo snap install lxd
          sudo adduser "$USER" lxd
          # `newgrp` does not work in GitHub Actions; use `sudo --user` instead
          sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- lxd waitready
          sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- lxd init --auto
          # Workaround for Docker & LXD on same machine
          sudo iptables -F FORWARD
          sudo iptables -P FORWARD ACCEPT
          sudo snap install charmcraft --classic
          sudo snap install juju --channel=3/stable
          sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- juju bootstrap localhost lxd
          sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- juju model-defaults --cloud=localhost logging-config='<root>=WARNING;unit=DEBUG;http=TRACE'
      - run: snap list
      - uses: actions/checkout@v5.0.0
      - run: sudo apt install skopeo -y
      - name: Remove some stuff to regain storage space
        # We remove things before charm packing to make sure that it still works
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /usr/share/swift
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/lib/jvm
          sudo rm -rf /usr/local/julia*
      - name: Cache bind
        id: cache-bind
        uses: actions/cache@v4.3.0
        with:
          path: ./bind_ubuntu-22.04-amd64.charm
          key: bind-charm-${{ hashFiles('./bind-operator/**') }}
      - name: Pack charm bind
        if: ${{ steps.cache-bind.outputs.cache-hit != 'true' }}
        run: |
          sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- charmcraft pack -v -p ./bind-operator
      - name: Cache dns-integrator
        id: cache-dns-integrator
        uses: actions/cache@v4.3.0
        with:
          path: ./dns-integrator_ubuntu-22.04-amd64.charm
          key: dns-integrator-charm-${{ hashFiles('./dns-integrator-operator/**') }}
      - name: Pack charm dns-integrator
        if: ${{ steps.cache-dns-integrator.outputs.cache-hit != 'true' }}
        run: |
          sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- charmcraft pack -v -p ./dns-integrator-operator
      - name: Cache dns-resolver
        id: cache-dns-resolver
        uses: actions/cache@v4.3.0
        with:
          path: ./dns-resolver-22.04-amd64.charm
          key: dns-resolver-charm-${{ hashFiles('./dns-resolver-operator/**') }}
      - name: Pack charm dns-resolver
        if: ${{ steps.cache-dns-resolver.outputs.cache-hit != 'true' }}
        run: |
          sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- charmcraft pack -v -p ./dns-resolver-operator
      - name: Cache dns-secondary
        id: cache-dns-secondary
        uses: actions/cache@v4.3.0
        with:
          path: ./dns-secondary-22.04-amd64.charm
          key: dns-secondary-charm-${{ hashFiles('./dns-secondary-operator/**') }}
      - name: Pack charm dns-secondary
        if: ${{ steps.cache-dns-secondary.outputs.cache-hit != 'true' }}
        run: |
          sudo --user "$USER" --preserve-env --preserve-env=PATH -- env -- charmcraft pack -v -p ./dns-secondary-operator
      - name: Run lxd integration tests
        run: |
          tox -e integration -- --keep-models \
            --bind-charm-file=./bind_ubuntu-22.04-amd64.charm \
            --dns-integrator-charm-file=./dns-integrator_ubuntu-22.04-amd64.charm \
            --dns-resolver-charm-file=./dns-resolver_ubuntu-22.04-amd64.charm \
            --dns-secondary-charm-file=./dns-secondary_ubuntu-22.04-amd64.charm
      - name: Juju debug-log
        if: failure()
        run: |
          juju models
          for model in $(juju models --format json | jq -r '.models[].name')
          do
            echo ==== debug-log in model: $model
            juju debug-log --replay --no-tail -m $model
          done
